// Алгоритм Прима

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.IO;
using System.Linq;
public class Description : IComparable
{
    public string bow;
    public int weight;

    public int CompareTo(object? obj)
    {
        Description? description = obj as Description;
        if (description == null)
            throw new Exception("Невозможно сравнить объекты");
        if (this.weight > description.weight)
            return 1;
        if (this.weight < description.weight)
            return -1;
        return 0;
    }
}
class Prima
{
    static void Main()
    {
        List<Description> TotalInfo = new List<Description>();
        List<Description> Answer = new List<Description>();
        List<Description> Assistent = new List<Description>();

        List<string> Points = new List<string>();
        List<string> CurrentPoints = new List<string>();

        int n = Convert.ToInt32(Console.ReadLine());

        while (n > 0)
        {
            Description d = new Description();
            string[] tem = Console.ReadLine().Split(' ');

            d.bow = tem[0];
            d.weight = Convert.ToInt32(tem[1]);
            TotalInfo.Add(d);
            
            if (Points.Contains(tem[0][0].ToString()) == false)
                Points.Add(tem[0][0].ToString());

            if (Points.Contains(tem[0][1].ToString()) == false)
                Points.Add(tem[0][1].ToString());
            
            n--;
        }                 

        CurrentPoints.Add(TotalInfo[0].bow[0].ToString());

        
        while(Points.Count != CurrentPoints.Count)
        {
            for (int j = 0; j < CurrentPoints.Count; j++)  
            {
                for (int i = 0; i < TotalInfo.Count; i++)
                {
                    if ( TotalInfo[i].bow.Contains(CurrentPoints[j]) && (CurrentPoints.Contains(TotalInfo[i].bow[0].ToString()) == false || CurrentPoints.Contains(TotalInfo[i].bow[1].ToString()) == false)  )
                    {
                        Description d = new Description();
                        d.bow = TotalInfo[i].bow;
                        d.weight = TotalInfo[i].weight;
                        Assistent.Add(d);
                        TotalInfo.RemoveAt(i);
                        i = 0;
                    }
                }
            }

            Assistent.Sort();
            Answer.Add(Assistent[0]);

            if (CurrentPoints.Contains(Assistent[0].bow[0].ToString()) == false)
                CurrentPoints.Add(Assistent[0].bow[0].ToString());
            
            else
                CurrentPoints.Add(Assistent[0].bow[1].ToString());
            
            TotalInfo.Remove(Assistent[0]);
            Assistent.RemoveAt(0);
            TotalInfo.AddRange(Assistent);
            Assistent.Clear();
        }

        foreach(Description d in Answer)
            Console.WriteLine(d.bow.ToString() + " " + d.weight.ToString());
        }
    }
